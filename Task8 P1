public class ArrayDemo {
    public static void main(String[] args) {
        int[] numbers = {4, 6, 5, -10, 8, 5, 20};
        int target = 10;

        ArrayDemo demo = new ArrayDemo();
        demo.arrayFunc(numbers, target);

        int[] A = {1, 5, 6, 7, 8, 10};
        int[] B = {2, 4, 9};

        demo.arrayFunc(A, A.length, B, B.length);
    }

    // Method to find pairs of elements in an array whose sum is equal to a given number
    public void arrayFunc(int[] arr, int target) {
        System.out.println("Pairs of elements whose sum is " + target + " are:");
        for (int i = 0; i < arr.length - 1; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] + arr[j] == target) {
                    System.out.println(arr[i] + " + " + arr[j] + " = " + target);
                }
            }
        }
    }

    // Method to merge two sorted arrays while maintaining the sorted order
    public void arrayFunc(int[] A, int p, int[] B, int q) {
        int[] mergedArray = new int[p + q];

        int i = 0, j = 0, k = 0;

        while (i < p && j < q) {
            if (A[i] <= B[j]) {
                mergedArray[k] = A[i];
                i++;
            } else {
                mergedArray[k] = B[j];
                j++;
            }
            k++;
        }

        // Copy remaining elements from array A, if any
        while (i < p) {
            mergedArray[k] = A[i];
            i++;
            k++;
        }

        // Copy remaining elements from array B, if any
        while (j < q) {
            mergedArray[k] = B[j];
            j++;
            k++;
        }

        // Split the merged array back into A and B
        for (int m = 0; m < p; m++) {
            A[m] = mergedArray[m];
        }

        for (int n = 0; n < q; n++) {
            B[n] = mergedArray[p + n];
        }

        System.out.println("Sorted Arrays:");
        System.out.println("A: " + java.util.Arrays.toString(A));
        System.out.println("B: " + java.util.Arrays.toString(B));
    }
}
